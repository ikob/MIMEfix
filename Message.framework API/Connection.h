/*
 *     Generated by class-dump 3.2 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

@class NSData, NSString, SASLAuthenticator, _NSSocket;

@interface Connection
{
    id <SASLSecurityLayer> _securityLayer;
    _NSSocket *_socket;
    char *_buffer;
    long long _bufferRemainingBytes;
    unsigned long long _bufferStart;
    unsigned long long _bufferLength;
    NSData *_logData;
    NSString *_hostname;
    unsigned int _portNumber;
    int _securityLayerType;
    NSString *_username;
    NSString *_password;
    SASLAuthenticator *_authenticator;
    Class _accountClass;
    double _connectTimeout;
    double _readWriteTimeout;
    BOOL _canReauthenticate;
}

@property(readonly) NSString *hostname; // @synthesize hostname=_hostname;
// Preceeding property had unknown attributes: P
// Original attribute string: T@"NSString",R,V_hostname,P

@property double readWriteTimeout; // @synthesize readWriteTimeout=_readWriteTimeout;
@property double connectTimeout; // @synthesize connectTimeout=_connectTimeout;

+ (void)initialize;
+ (void)logBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (void)flushLog;
+ (id)logClasses;
+ (void)setLogClasses:(id)arg1;
+ (BOOL)logAllSocketActivity;
+ (void)setLogAllSocketActivity:(BOOL)arg1;
+ (id)logActivityOnPorts;
+ (void)setLogActivityOnPorts:(id)arg1;
+ (id)logActivityOnHosts;
+ (void)setLogActivityOnHosts:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)_resetLogHeader;
- (void)_setupSSLDomainError:(id)arg1 hostname:(id)arg2 socket:(id)arg3;
- (void)_setupConnectionErrorMessageForMonitor:(id)arg1 withHostname:(id)arg2 port:(unsigned int)arg3 usingSSL:(BOOL)arg4;
- (BOOL)connectAndSetSecurityLayerUsingAccount:(id)arg1;
- (BOOL)connectUsingAccount:(id)arg1;
- (BOOL)reconnect;
- (BOOL)_connectUsingAccount:(id)arg1 securityLayerType:(int)arg2;
- (BOOL)_connectUsingHostname:(id)arg1 onPort:(unsigned int)arg2 securityLayerType:(int)arg3 accountClass:(Class)arg4;
- (void)_clearSuccessfulConnection;
- (void)_setSuccessfulConnectionHostname:(id)arg1 onPort:(unsigned int)arg2 securityLayerType:(int)arg3 accountClass:(Class)arg4;
- (void)_setupConnection;
- (BOOL)_teardownConnectionWithResult:(BOOL)arg1;
- (BOOL)authenticateUsingAccount:(id)arg1;
- (BOOL)_reauthenticate;
- (void)_clearSuccessfulAuthentication;
- (void)_setSuccessfulAuthenticationUsername:(id)arg1 password:(id)arg2 authenticator:(id)arg3;
- (id)capabilities;
- (id)authenticationMechanisms;
- (BOOL)_writeData:(id)arg1 dontLogBytesInRange:(struct _NSRange)arg2 error:(id *)arg3;
- (BOOL)_writeData:(id)arg1 error:(id *)arg2;
- (long long)_readBytesFromSocketIntoBuffer:(char *)arg1 amount:(long long)arg2 requireAllBytes:(BOOL)arg3 error:(id *)arg4;
- (BOOL)_fillBuffer:(id *)arg1;
- (BOOL)_readLineIntoData:(id)arg1 error:(id *)arg2;
- (BOOL)_readBytesIntoData:(id)arg1 desiredLength:(unsigned long long)arg2 error:(id *)arg3;
- (BOOL)_authenticateUsingAccount:(id)arg1 authenticator:(id)arg2;
- (BOOL)_startTLSForHostname:(id)arg1 onPort:(unsigned int)arg2 securityLayerType:(int)arg3 accountClass:(Class)arg4;
- (int)_startTLSForSecurityLayerType:(int)arg1;
- (BOOL)isValid;
- (void)disconnect;
- (void *)_socket;
- (BOOL)_hasBytesAvailable;
- (id)hostname;
- (double)readWriteTimeout;
- (void)setReadWriteTimeout:(double)arg1;
- (double)connectTimeout;
- (void)setConnectTimeout:(double)arg1;

@end

