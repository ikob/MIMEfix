/*
 *     Generated by class-dump 3.2 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

#import "CalendarStoreConduit-Protocol.h"

@class InvocationQueue, NSMutableArray, NSPredicate, ToDoCalendars, ToDosCache;

@interface CalendarStoreInterchange <CalendarStoreConduit>
{
    NSPredicate *_predicateForAllToDos;
    BOOL _holdNotifications;
    NSMutableArray *_queuedNotifications;
    NSMutableArray *_queuedNotificationsTypes;
    ToDosCache *_todosCache;
    ToDoCalendars *_todoCalendars;
    InvocationQueue *_invocationQueue;
}

+ (BOOL)isHandlingCalendarStoreChange;
+ (void)_beginHandlingCalendarStoreChange;
+ (void)_endHandlingCalendarStoreChange;
- (void)_setPredicateForAllToDosUsingCalendars:(id)arg1;
- (id)initWithToDosCache:(id)arg1 todoCalendars:(id)arg2;
- (id)init;
- (void)dealloc;
- (void)initialSynchronization;
- (void)_retrieveCurrentCalendarStoreState;
- (id)calTaskWithID:(id)arg1;
- (void)synchronize;
- (void)holdNotifications;
- (void)resumeNotifications;
- (void)addToDo:(id)arg1;
- (void)saveToDo:(id)arg1;
- (void)removeToDo:(id)arg1;
- (void)addCalendar:(id)arg1;
- (void)saveCalendar:(id)arg1;
- (void)removeCalendar:(id)arg1;
- (void)addCalendarGroup:(id)arg1;
- (void)saveCalendarGroup:(id)arg1;
- (void)removeCalendarGroup:(id)arg1;
- (void)removeCalendarGroup:(id)arg1 reflectToCalendarStore:(BOOL)arg2;
- (id)_createFakeNotificationWithID:(id)arg1 object:(id)arg2 objectIDForUserInfo:(id)arg3 keyForUserInfo:(id)arg4;
- (void)_notifyOfChangesInToDoCalendar:(id)arg1;
- (void)_notifyOfChangesInToDo:(id)arg1;
- (void)_updateMailitemURIonToDo:(id)arg1;
- (void)_cleanUpToDosWithoutAccounts;
- (id)_currentToDosState;
- (id)_currentCalendarsState;
- (id)_currentCalendarGroupsState;
- (id)_todosFromUIDs:(id)arg1 forAddingToDos:(BOOL)arg2;
- (id)_todosFromCurrentUIDs:(id)arg1;
- (id)_todosFromNewUIDs:(id)arg1;
- (id)_cachedToDosFromUIDs:(id)arg1;
- (id)_calendarsFromUIDs:(id)arg1;
- (id)_cachedCalendarsFromUIDs:(id)arg1;
- (id)_cachedCalendarGroupsFromUIDs:(id)arg1;
- (id)_findExistingTodoCalendarGroupForCalGroup:(id)arg1;
- (id)_findAccountFromCalendarGroupID:(id)arg1;
- (id)_createLibraryToDoCalendarFromCalCalendar:(id)arg1;
- (id)_createToDoCalendarGroupFromCalGroup:(id)arg1;
- (void)_calTaskDidChangeNotification:(id)arg1;
- (void)_handleCalTaskChangeNotification:(id)arg1;
- (void)_calTaskDateStampDidChangeNotification:(id)arg1;
- (id)_calendarAccountFromCalCalendar:(id)arg1;
- (id)_getColorFromCalCalendar:(id)arg1;
- (void)_calCalendarDidChangeNotification:(id)arg1;
- (void)_handleCalCalendarChangeNotification:(id)arg1;
- (void)_calGroupDidChangeNotification:(id)arg1;
- (void)_handleCalGroupChangeNotification:(id)arg1;
- (void)_calCalendarResetNotification:(id)arg1;
- (void)_handleCalCalendarResetNotification:(id)arg1;
- (BOOL)_reportInconsistenciesInCalendar:(id)arg1;
- (BOOL)_reportInconsistenciesInToDo:(id)arg1;
- (BOOL)_todo:(id)arg1 isInSameAccountAsCalTask:(id)arg2;
- (id)_newCalTaskForToDoThatMovedBetweenAccounts:(id)arg1;
- (void)_splitUpdatedToDoIDs:(id)arg1 intoDeletedToDoIDs:(id)arg2 addedToDoIDs:(id)arg3;
- (BOOL)_addCalGroup:(id)arg1;
- (BOOL)_deleteCalGroup:(id)arg1;
- (BOOL)_addCalCalendar:(id)arg1;
- (BOOL)_addCalTask:(id)arg1;
- (BOOL)_updateCalTask:(id)arg1;
- (BOOL)_deleteCalTask:(id)arg1;
- (id)_recreateIMAPGroups:(id)arg1;
- (void)_recreateIMAPCalendars:(id)arg1 usingGroupsMapping:(id)arg2;
- (void)recreateIMAPGroups:(id)arg1 calendars:(id)arg2 todos:(id)arg3;
- (void)_removeIMAPInformationFromiCalDueToReset;
- (void)_removeToDosAffectedByReset:(id)arg1;
- (void)_splitKnownCalendarGroupsIntoThoseWithTruthIniCal:(id *)arg1 andTruthInMail:(id *)arg2;
- (void)_splitKnownCalendarsIntoThoseWithTruthIniCal:(id *)arg1 andTruthInMail:(id *)arg2;
- (void)_splitKnownToDosIntoThoseWithTruthIniCal:(id *)arg1 andTruthInMail:(id *)arg2;
- (void)_sendCalendarGroupsNotificationOfType:(id)arg1 withObjects:(id)arg2;
- (void)_sendCalendarsNotificationOfType:(id)arg1 withObjects:(id)arg2;
- (void)_sendToDosNotificationOfType:(id)arg1 withObjects:(id)arg2;
- (BOOL)_inferredCalendarStoreReset;

@end

