/*
 *     Generated by class-dump 3.2 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

#import <Message/RemoteStoreAccount.h>

@class IMAPConnectionPool, IMAPOperationCache, LibraryIMAPStore, NSArray, NSLock, NSMutableDictionary, NSMutableSet, NSString;

@interface IMAPAccount : RemoteStoreAccount
{
    NSString *_separatorChar;
    NSArray *_lastKnownCapabilities;
    IMAPConnectionPool *_connectionPool;
    unsigned int _readBufferSize:31;
    unsigned int _lastConnectionFailed:1;
    IMAPOperationCache *_offlineCache;
    unsigned int _shouldIncludePrefixInPath:1;
    NSLock *_mailboxListingLock;
    NSLock *_connectionPoolLock;
    BOOL _allowsInputForConnectionProblems;
    NSMutableSet *_mailboxURLsToSynchronize;
    NSMutableDictionary *_IMAPMailboxes;
    NSMutableDictionary *_IMAPQuotaRoots;
    unsigned int _isFetchingUnreadCountsForAllMailboxes:1;
    unsigned int _isFetchingUnreadCountsAndCheckingNewMessagesForAllMailboxes:1;
    double _lastUnreadCountsUpdateTime;
    double _lastUnreadCountsAndNewMessagesUpdateTime;
    NSString *_fileSystemServerPathPrefix;
    NSLock *_fsPrefixLock;
    BOOL _recoveringFromConnectionLoss;
    double _lastToDoReconcileTime;
    NSArray *_namespacePrefixes;
    LibraryIMAPStore *_inboxStore;
}

@property(retain) LibraryIMAPStore *inboxStore; // @synthesize inboxStore=_inboxStore;
// Preceeding property had unknown attributes: P
// Original attribute string: T@"LibraryIMAPStore",&,V_inboxStore,P

@property BOOL recoveringFromConnectionLoss; // @synthesize recoveringFromConnectionLoss=_recoveringFromConnectionLoss;
@property(retain) IMAPConnectionPool *connectionPool; // @synthesize connectionPool=_connectionPool;
// Preceeding property had unknown attributes: P
// Original attribute string: T@"IMAPConnectionPool",&,V_connectionPool,P


+ (void)initialize;
+ (id)accountTypeString;
+ (void)_deleteQueuedMailboxes:(id)arg1;
- (id)init;
- (void)_readCustomInfoFromMailboxCache:(id)arg1;
- (void)_writeCustomInfoToMailboxCache:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (void)saveCache;
- (void)updateFromSyncedDictionary:(id)arg1;
- (void)doRoutineCleanup;
- (BOOL)isSyncable;
- (Class)storeClass;
- (Class)todoStoreClass;
- (id)mailboxPathExtension;
- (unsigned int)defaultPortNumber;
- (unsigned int)defaultSecurePortNumber;
- (id)serviceName;
- (id)secureServiceName;
- (id)saslProfileName;
- (BOOL)requiresAuthentication;
- (Class)connectionClass;
- (id)authenticatedConnection;
- (BOOL)compactWhenClosingMailboxes;
- (void)setCompactWhenClosingMailboxes:(BOOL)arg1;
- (BOOL)useIDLEIfAvailable;
- (void)setUseIDLEIfAvailable:(BOOL)arg1;
- (BOOL)_setChildren:(id)arg1 forMailboxUid:(id)arg2;
- (id)primaryMailboxUid;
- (BOOL)handleResponseCodeFromResponse:(id)arg1;
- (void)_handleAlertResponse:(id)arg1;
- (unsigned int)readBufferSize;
- (void)setReadBufferSize:(unsigned int)arg1;
- (void)synchronizeAllMailboxes;
- (BOOL)needToSynchronizeMailboxCaches;
- (void)didSynchronizeMailboxCachesAndFoundChanges:(BOOL)arg1;
- (void)_checkForNewMessagesInStore:(id)arg1;
- (id)_dataForTemporaryUid:(unsigned int)arg1;
- (unsigned long long)minimumPartialDownloadSize;
- (BOOL)allowsPartialDownloads;
- (void)setAllowsPartialDownloads:(BOOL)arg1;
- (void)_clearAllPathBasedCachesAndDelete:(BOOL)arg1;
- (BOOL)_connectAndAuthenticate:(id)arg1;
- (void)handleOpenMailboxError:(id)arg1;
- (id)gatewayForStore:(id)arg1 options:(int)arg2;
- (id)gatewayForExistingConnectionToMailbox:(id)arg1;
- (void)recoverFromConnectionLoss;
- (void)invalidateMailboxWithName:(id)arg1 expunge:(BOOL)arg2 URLToCompact:(id)arg3;
- (void)_invalidateMailboxWithName:(id)arg1 expunge:(BOOL)arg2 URLToCompact:(id)arg3;
- (id)_gatewayForMailboxUid:(id)arg1 name:(id)arg2 options:(int)arg3;
- (id)_getPotentialGatewayForMailbox:(id)arg1 options:(int)arg2 createdNewConnection:(char *)arg3 needsSelect:(char *)arg4;
- (BOOL)_shouldRetryConnectionWithoutCertificateCheckingAfterError:(id)arg1;
- (BOOL)_recoverFromConnectionlessState;
- (void)_releaseAllConnectionsAndCallSuper:(BOOL)arg1 saveOfflineCache:(BOOL)arg2;
- (void)releaseAllConnections;
- (void)_validateConnections;
- (void)validateConnections;
- (void)filterMailboxList:(id)arg1 forMailbox:(id)arg2 options:(int)arg3;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)IMAPMailboxForMailboxUid:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)IMAPMailboxForMailboxName:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)_IMAPMailboxForMailboxUid:(id)arg1 name:(id)arg2 createIfNeeded:(BOOL)arg3;
- (id)_addIMAPMailboxForMailboxUid:(id)arg1 name:(id)arg2;
- (void)_renameIMAPMailboxWithMailboxUid:(id)arg1 fromName:(id)arg2 toName:(id)arg3;
- (void)_removeIMAPMailboxWithName:(id)arg1;
- (void)_startObserving:(BOOL)arg1 IMAPMailbox:(id)arg2;
- (id)quotaRootForName:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)clearQuotaRoots;
- (void)_setIsOffline:(BOOL)arg1;
- (void)setIsOffline:(BOOL)arg1;
- (void)_asynchronouslyFetchUnreadCountsCheckForNewMessages:(BOOL)arg1;
- (void)fetchToDosSynchronously;
- (void)fetchSynchronouslyIsAuto:(id)arg1;
- (void)_setSeparatorChar:(id)arg1;
- (id)separatorChar;
- (id)lastKnownCapabilities;
- (BOOL)supportsIDLE;
- (id)additionalHeaderFields;
- (BOOL)_synchronizeMailboxListWithUserInput:(BOOL)arg1;
- (id)_listingForMailboxUid:(id)arg1 listAllChildren:(BOOL)arg2 onlySubscribed:(BOOL)arg3 withUserInput:(BOOL)arg4;
- (id)_namespacePrefixesForPrivate:(BOOL)arg1 public:(BOOL)arg2 shared:(BOOL)arg3;
- (id)_recursivelyFilterMailboxList:(id)arg1 accordingToList:(id)arg2;
- (id)_listingForMailboxUid:(id)arg1 listAllChildren:(BOOL)arg2 withUserInput:(BOOL)arg3;
- (BOOL)_createMailbox:(id)arg1 withGateway:(id)arg2;
- (id)createMailboxWithParent:(id)arg1 name:(id)arg2 displayName:(id)arg3;
- (id)validNameForMailbox:(id)arg1 fromDisplayName:(id)arg2 error:(id *)arg3;
- (BOOL)_askToChangePathPrefixToCreateMailbox:(id)arg1 displayName:(id)arg2 withGateway:(id)arg3;
- (BOOL)_deleteMailbox:(id)arg1;
- (id)_specialMailboxNameForType:(int)arg1;
- (id)_specialMailboxUidWithType:(int)arg1 create:(BOOL)arg2 isLocal:(BOOL)arg3;
- (void)_fetchUnreadCountsForMailboxUid:(id)arg1 recursively:(BOOL)arg2 gateway:(id)arg3 checkForNewMessages:(BOOL)arg4;
- (void)_fetchUnreadCountsForMailboxUid:(id)arg1 recursively:(BOOL)arg2 gateway:(id)arg3;
- (void)_fetchUnreadCountsCheckForNewMessages:(BOOL)arg1;
- (void)_synchronizeAccountWithServerWithUserInput:(id)arg1;
- (id)_copyMailboxUidWithParent:(id)arg1 name:(id)arg2 attributes:(unsigned long long)arg3 existingMailboxUid:(id)arg4;
- (void)_synchronouslyLoadListingForParent:(id)arg1;
- (void)refreshMailboxListingRootedAtUid:(id)arg1;
- (void)_waitForMailboxListingLoadToComplete;
- (void)_mailboxesWereRemovedFromTree:(id)arg1 withFileSystemPaths:(id)arg2;
- (void)_recursivelyModifySubscriptions:(BOOL)arg1 forMailbox:(id)arg2 children:(id)arg3 withGateway:(id)arg4;
- (BOOL)renameMailbox:(id)arg1 newName:(id)arg2 parent:(id)arg3;
- (void)insertInMailboxes:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_pathComponentForUidName:(id)arg1;
- (id)_uidNameForPathComponent:(id)arg1;
- (id)_pathForMailboxName:(id)arg1 toCreateInMailboxUid:(id)arg2;
- (id)_nameForMailboxUid:(id)arg1;
- (id)nameForMailboxUid:(id)arg1;
- (id)_mailboxUidForName:(id)arg1;
- (BOOL)canMailboxBeDeleted:(id)arg1;
- (id)serverPathPrefix;
- (void)_setServerPathPrefix:(id)arg1 permanently:(BOOL)arg2 shouldSync:(BOOL)arg3;
- (void)setServerPathPrefix:(id)arg1 permanently:(BOOL)arg2;
- (id)_fileSystemServerPathPrefix;
- (void)_setFileSystemServerPathPrefix;
- (void)syncFileSystemWithServerPathPrefix;
- (id)_mailboxPathPrefix;
- (void)_loadEntriesFromFileSystemPath:(id)arg1 parent:(id)arg2;
- (void)deleteMessagesFromMailboxUid:(id)arg1 olderThanNumberOfDays:(unsigned long long)arg2;
- (id)offlineCacheIfOffline;
- (id)offlineCache;
- (void)_clearOfflineCache;
- (id)mailboxUidForRelativePath:(id)arg1 create:(BOOL)arg2;
- (id)_URLPersistenceScheme;
- (id)_infoForMatchingURL:(id)arg1;
- (Class)reconciliationAgentClass;
- (BOOL)supportsToDos;
- (BOOL)storesUnseenCount;
- (id)inboxStore;
- (void)setInboxStore:(id)arg1;
- (BOOL)recoveringFromConnectionLoss;
- (void)setRecoveringFromConnectionLoss:(BOOL)arg1;
- (id)connectionPool;
- (void)setConnectionPool:(id)arg1;

@end

