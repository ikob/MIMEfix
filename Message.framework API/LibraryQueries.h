/*
 *     Generated by class-dump 3.2 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

@interface LibraryQueries
{
}

+ (char *)queryForUniquingDataForMessageNumber:(long long)arg1;
+ (char *)queryToFindCopiesOfMessage:(char *)arg1 sentOn:(unsigned long long)arg2 receivedOn:(unsigned long long)arg3 withSize:(unsigned long long)arg4;
+ (id)checkOutStatementToInsertMessage:(struct sqlite3 *)arg1;
+ (id)checkOutStatementToCompletelyUpdateMessage:(struct sqlite3 *)arg1;
+ (id)checkOutStatementToInsertToDo:(struct sqlite3 *)arg1;
+ (int)bindFullToDoStatement:(id)arg1 withLibraryToDo:(id)arg2;
+ (id)checkOutStatementToUpdateToDo:(struct sqlite3 *)arg1;
+ (int)bindUpdateToDoStatement:(id)arg1 withLibraryToDo:(id)arg2;
+ (id)checkOutStatementToInsertAlarm:(struct sqlite3 *)arg1;
+ (int)bindInsertAlarmStatement:(id)arg1 withLibraryToDoAlarm:(id)arg2;
+ (char *)queryToDeleteToDoByLibraryID:(long long)arg1;
+ (char *)queryToDeleteToDoAlarmsByToDoLibraryID:(long long)arg1;
+ (char *)queryForAllToDosInMailboxes:(id)arg1;
+ (id)checkOutStatementForMaximumRemoteIDForMailbox:(struct sqlite3 *)arg1;
+ (id)checkOutStatementForToDosDetailInRange:(struct _NSRange)arg1 fromMailbox:(id)arg2 usingDB:(struct sqlite3 *)arg3;
+ (char *)queryToUpdateToDo:(id)arg1 toNewRemoteID:(id)arg2;
+ (id)checkOutStatementForToDoUsingLibraryID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForToDoWithID:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForToDoWithID:(id)arg1 remoteID:(id)arg2 usingDB:(struct sqlite3 *)arg3;
+ (id)checkOutStatementForToDoWithID:(id)arg1 remoteID:(id)arg2 mailboxID:(long long)arg3 usingDB:(struct sqlite3 *)arg4;
+ (id)checkOutStatementForToDoWithRemoteID:(id)arg1 inMailbox:(long long)arg2 usingDB:(struct sqlite3 *)arg3;
+ (id)checkOutStatementForAllToDosInLibrary:(struct sqlite3 *)arg1;
+ (id)checkOutStatementForAllToDosInMailboxes:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForAllToDosWithMailboxID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForLastToDoWithID:(id)arg1 inMailbox:(id)arg2 usingDB:(struct sqlite3 *)arg3;
+ (id)checkOutStatementForSearchDataForAllToDosInMailboxID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForAllToDosForDocumentID:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForAllToDosForMessage:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForAlarmsWithToDoLibraryID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForToDoIDForAlarmID:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForToDoIDsInCalendarWithID:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForToDoIDsSearchDataWithWhereClause:(id)arg1 andFromClause:(id)arg2 usingDB:(struct sqlite3 *)arg3;
+ (id)checkOutStatementForToDosMatchingSearchDataArray:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)queryForToDoCountWithWhereClause:(id)arg1 andFromClause:(id)arg2;
+ (id)checkOutStatementToInsertNotes:(struct sqlite3 *)arg1;
+ (int)bindInsertNotesStatement:(id)arg1 withNotes:(id)arg2 todoLibraryID:(long long)arg3;
+ (char *)queryToDeleteToDoNotesByToDoLibraryID:(long long)arg1;
+ (id)checkOutStatementForAllToDoCalendarsInLibrary:(struct sqlite3 *)arg1;
+ (id)checkOutStatementForAllUniqueToDoCalendarsInLibrary:(struct sqlite3 *)arg1;
+ (id)checkOutStatementToInsertToDoCalendar:(struct sqlite3 *)arg1;
+ (id)checkOutStatementToUpdateToDoCalendar:(struct sqlite3 *)arg1;
+ (char *)queryToDeleteToDoCalendars:(id)arg1;
+ (int)bindFullToDoCalendarStatement:(id)arg1 withLibraryToDoCalendar:(id)arg2;
+ (int)bindUpdateToDoCalendarStatement:(id)arg1 withLibraryToDoCalendar:(id)arg2;
+ (id)fromClauseForTables:(unsigned long long)arg1 startingFromTableExpression:(id)arg2;
+ (id)checkOutStatementForSnapshotToDoUIDForRemoteID:(id)arg1 withMailboxID:(long long)arg2 usingDB:(struct sqlite3 *)arg3;
+ (id)checkOutStatementForSnapshotRemoteIDForToDoUID:(id)arg1 withMailboxID:(long long)arg2 usingDB:(struct sqlite3 *)arg3;
+ (id)checkOutStatementForSnapshotAddToDoID:(id)arg1 withRemoteID:(id)arg2 withMailboxID:(long long)arg3 usingDB:(struct sqlite3 *)arg4;
+ (id)checkOutStatementForSnapshotRemoveToDoID:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForSnapshotRemoveToDoID:(id)arg1 withMailboxID:(long long)arg2 usingDB:(struct sqlite3 *)arg3;
+ (id)checkOutStatementForRetrievingSnapshotWithMailboxID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementToDeleteAllSnapshotRowsWithMailboxID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForAllToDoIDsAndRemoteIDsForMailboxID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForMailboxURLFromMailboxID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForToDoMailboxIDForIncompleteMailAccount:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementToInsertDeletedToDo:(struct sqlite3 *)arg1;
+ (int)bindFullToDosDeletedLogStatement:(id)arg1 withToDoID:(id)arg2 documentID:(id)arg3;
+ (id)checkOutStatementForDeletedToDoWithID:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementForDeletedToDoIDsForDocumentID:(id)arg1 usingDB:(struct sqlite3 *)arg2;
+ (char *)queryToRemoveDeletedToDoWithID:(id)arg1;
+ (id)checkOutStatementForEventWithMessageID:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
+ (id)checkOutStatementToInsertEvent:(struct sqlite3 *)arg1;
+ (int)bindInsertEventStatement:(id)arg1 withEvent:(id)arg2 messageID:(long long)arg3;
+ (id)checkOutStatementToUpdateEvent:(struct sqlite3 *)arg1;
+ (int)bindUpdateEventStatement:(id)arg1 withEvent:(id)arg2 messageID:(long long)arg3;
+ (char *)queryToDeleteEventByMessageID:(id)arg1;

@end

