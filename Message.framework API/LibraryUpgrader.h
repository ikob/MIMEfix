/*
 *     Generated by class-dump 3.2 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2009 by Steve Nygard.
 */

@class ActivityAggregate, ActivityMonitor, Library;

@interface LibraryUpgrader
{
    Library *_library;
    unsigned long long _majorVersion;
    unsigned long long _minorVersion;
    ActivityMonitor *_monitor;
    ActivityAggregate *_activity;
    id _delegate;
    struct sqlite3 *_upgraderDB;
    BOOL _readOnly;
}

@property BOOL readOnly; // @synthesize readOnly=_readOnly;
@property id delegate; // @synthesize delegate=_delegate;
// Preceeding property had unknown attributes: P
// Original attribute string: T@,V_delegate,P


+ (void)initialize;
+ (BOOL)sqliteObjectExists:(struct sqlite3 *)arg1 name:(const char *)arg2 type:(const char *)arg3 tableName:(const char *)arg4;
- (id)initWithLibrary:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)monitor;
- (void)setMonitor:(id)arg1;
- (id)activity;
- (void)setActivity:(id)arg1;
- (id)status;
- (void)setStatus:(id)arg1;
- (void)setStatusOnMainThread:(id)arg1;
- (void)getVersionInfo;
- (void)executeSQL:(id)arg1;
- (BOOL)updateMinorVersion:(unsigned long long)arg1 usingDB:(struct sqlite3 *)arg2;
- (void)executeSQL:(id)arg1 updateMinorVersion:(unsigned long long)arg2;
- (void)bootstrapVersioningEngine;
- (void)vacuum;
- (void)dropTriggers;
- (void)createTriggers;
- (void)setDB:(struct sqlite3 *)arg1;
- (int)libraryStatus;
- (BOOL)canRun:(id *)arg1;
- (BOOL)needsRun;
- (void)upgradeSchema;
- (void)postUpgradeDataMigration;
- (void)incrementProgressIndicator;
- (void)run;
- (void)addMessageType:(long long)arg1;
- (void)addDocumentID:(long long)arg1;
- (void)addPositionToRecipients:(long long)arg1;
- (void)populateRecipientPosition:(long long)arg1;
- (void)giveDraftsUniqueIDs:(long long)arg1;
- (int)replaceRecipientsAddressRowID:(long long)arg1 withRowID:(long long)arg2 usingDB:(struct sqlite3 *)arg3;
- (int)replaceMessagesSenderRowID:(long long)arg1 withRowID:(long long)arg2 usingDB:(struct sqlite3 *)arg3;
- (int)replaceAddressRowID:(long long)arg1 withRowID:(long long)arg2 usingDB:(struct sqlite3 *)arg3;
- (long long)getSurvivingRowIDForDuplicatedRowID:(long long)arg1 dupAddress:(char *)arg2 dupComment:(char *)arg3 usingDB:(struct sqlite3 *)arg4;
- (void)upgradeEmailAddressROWIDsToCaseInsensitive:(struct sqlite3 *)arg1;
- (void)createCaseInsensitiveTemporaryAddressTable;
- (void)replaceAddressesTableWithAddressesTemp:(long long)arg1 usingDB:(struct sqlite3 *)arg2;
- (void)upgradeFrom4_10To4_11:(long long)arg1;
- (void)_moveUnreadCountsOutOfAttributes;
- (void)moveUnreadCountsOutOfAttributes:(long long)arg1;
- (void)upgradeColumnWidthPrefs:(long long)arg1;
- (void)addDateCreatedColumnOnMessages:(long long)arg1;
- (void)removeToDoIDUniqueRestriction:(long long)arg1;
- (void)removeAddressIndexAndAddTypeIndex:(long long)arg1;
- (void)clearAnalyzeTable:(long long)arg1;
- (void)addUIDToEventsTable:(long long)arg1;
- (void)normalizeRSSMailboxEncodings:(long long)arg1;
- (void)stampCurrentMinorVersion;
- (struct sqlite3 *)getReaderDB;
- (void)unlockReaderDB:(struct sqlite3 *)arg1;
- (struct sqlite3 *)getWriterDB;
- (void)unlockWriterDB:(struct sqlite3 *)arg1;
- (BOOL)readOnly;
- (void)setReadOnly:(BOOL)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

